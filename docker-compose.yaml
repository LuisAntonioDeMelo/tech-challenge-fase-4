version: '3'
services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: tech_challenge
      MYSQL_USER: techchallenge
      MYSQL_PASSWORD: techchallenge123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"    
    networks:
      - app-network
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo-data:/data/db

  mongo-express:
    depends_on:
      - mongo
    image: mongo-express
    ports:
      - 8200:8081
    restart: always
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: example
      ME_CONFIG_MONGODB_ADMINUSERNAME: root              
      ME_CONFIG_MONGODB_ADMINPASSWORD: example           
    links:
      - mongo
    networks:
      - app-network

  postgres:
    image: postgres:16.3-alpine
    ports:
      - "5446:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/data
    networks:
      - app-network

  redis:
    image: redis:7.2
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    ports:
      - "8100:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - app-network

  couchbase:
    image: couchbase:latest
    container_name: couchbase
    restart: always
    ports:
      - "8091-8096:8091-8096"
      - "11210-11211:11210-11211"
    environment:
      - COUCHBASE_ADMINISTRATOR_USERNAME=admin
      - COUCHBASE_ADMINISTRATOR_PASSWORD=admin123
    volumes:
      - couchbase_data:/opt/couchbase/var
    networks:
      - app-network

  eureka-server:
    build:
      context: ./eureka-server
    ports:
      - "8761:8761"
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway-ms:
    build:
      context: ./gateway-ms
    ports:
      - "8080:8080"
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy

  cliente-ms:
    build:
      context: ./cliente-ms
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_MONGODB_URI=mongodb://root:example@mongo:27017/tech-challenge-cliente
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      mongo:
        condition: service_started

  produto-ms:
    build:
      context: ./produto-ms
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_COUCHBASE_CONNECTION-STRING=couchbase://couchbase
      - SPRING_COUCHBASE_USERNAME=admin
      - SPRING_COUCHBASE_PASSWORD=admin123
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      couchbase:
        condition: service_started

  pedido-ms:
    build:
      context: ./pedido-ms
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/tech_challenge
      - SPRING_DATASOURCE_USERNAME=techchallenge
      - SPRING_DATASOURCE_PASSWORD=techchallenge123
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_started
      produto-ms:
        condition: service_started
      cliente-ms:
        condition: service_started

  pagamento-ms:
    build:
      context: ./pagamento-ms
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/tech_challenge
      - SPRING_DATASOURCE_USERNAME=techchallenge
      - SPRING_DATASOURCE_PASSWORD=techchallenge123
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_started
      pedido-ms:
        condition: service_started

volumes:
  postgres-data:
  redis-data:
  mongo-data:
  mysql_data:
  couchbase_data:
  
networks:
  app-network:
    driver: bridge
  mongo-compose-network:
    driver: bridge
