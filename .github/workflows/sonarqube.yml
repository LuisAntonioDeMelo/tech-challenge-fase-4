name: Build and Quality Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MAVEN_OPTS: -Dmaven.repo.local=$HOME/.m2/repository

jobs:
  quality-check:
    name: Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
          
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Build and test all microservices
        run: |
          echo "Building and testing all microservices..."
          mvn clean compile test -B --no-transfer-progress
          
      - name: Run JaCoCo coverage analysis
        run: |
          echo "Running JaCoCo coverage analysis..."
          cd gateway-ms
          mvn jacoco:report -B --no-transfer-progress
          cd ..
          
      - name: SonarQube analysis for Gateway
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          if [ -n "$SONAR_TOKEN" ]; then
            echo "Running SonarQube analysis for Gateway..."
            cd gateway-ms
            mvn sonar:sonar \
              -Dsonar.projectKey=tech-challenge-gateway \
              -Dsonar.projectName="Tech Challenge - Gateway" \
              -Dsonar.sources=src/main \
              -Dsonar.tests=src/test \
              -Dsonar.java.coveragePlugin=jacoco \
              -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
              -B --no-transfer-progress
            cd ..
          else
            echo "SonarQube analysis skipped - no SONAR_TOKEN provided"
          fi
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: '**/target/site/jacoco/'
          retention-days: 30
          
      - name: Generate quality report
        run: |
          echo "Quality Analysis Summary:" > quality-report.txt
          echo "======================" >> quality-report.txt
          echo "" >> quality-report.txt
          echo "✅ Build: SUCCESS" >> quality-report.txt
          echo "✅ Tests: PASSED" >> quality-report.txt
          echo "✅ Coverage: Generated" >> quality-report.txt
          echo "✅ Code Quality: Analyzed" >> quality-report.txt
          echo "" >> quality-report.txt
          echo "Report generated at: $(date)" >> quality-report.txt
          cat quality-report.txt
          
      - name: Upload quality report
        uses: actions/upload-artifact@v4
        with:
          name: quality-report
          path: quality-report.txt
          retention-days: 30
